library(palmerpenguins)
library(ggplot2)
library(clusterpval)
library(fastcluster)
library(patchwork)
source("util.R")
options(ggplot2.discrete.colour=list(RColorBrewer::brewer.pal(6, "Accent")))
# Subset to female penguins in years 2008/2009 & bill/flipper length variables
penguins <- penguins[complete.cases(penguins), ]
dat <- penguins[penguins$sex == "female" & penguins$year != 2009, c(1, 3, 5)]
X <- dat[, -c(1)]
X <- as.matrix(X)
# Split off a part to estimate the variance
X.ss <- penguins[penguins$sex == "female" & penguins$year == 2009, c(3, 5)]
sig <- sqrt(sum(scale(X.ss, scale = FALSE)^2)/(nrow(X.ss) * ncol(X.ss) -ncol(X.ss)))
# Cluster and visualize data; this is Figure 6
K <- 5
hc <- hclust(dist(X)^2, method="average")
hc$labels <- dat$species
table( hc$labels, cutree(hc, K))
p1 <- ggdendro::ggdendrogram(hc, labels=F) + ggtitle("(a) Dendrogram") +
geom_hline(yintercept=hc$height[nrow(X)-4] - 20, col="red", linetype="dashed") +
ylab("Height") + theme(axis.text.x=element_blank(),
plot.title = element_text(size=22),
axis.text.y=element_text(size=22))
p2 <- ggplot(data = penguins[penguins$sex == "female" & penguins$year != 2009, ]) +
geom_point(aes(x=bill_length_mm, y = flipper_length_mm,
fill = as.factor(cutree(hc, 5)),
shape=as.factor(species)), size = 5, colour="black") +
scale_fill_discrete(name="Clusters",
guide=guide_legend(ncol=2,
override.aes=list(shape=21))) +
scale_shape_manual(name="Species", values=c(21, 24, 22),
guide=guide_legend(override.aes=list(fill="black"))) +
xlab("Bill length (mm)") + ylab("Flipper length (mm)") +
coord_flip() +
theme_bw(base_size=22) + ggtitle("(b) Data") + theme(legend.position="right")
p1+p2
# Run tests
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=2, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=3, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=4, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=2, k2=3, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=2, k2=4, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=3, k2=4, hcl=hc, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=2, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=3, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=4, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=2, k2=3, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=2, k2=4, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=3, k2=4, sig=sig)
View(penguins)
library(clusterpval)
library(fastcluster)
library(DropletUtils)
install.packages("DropletUtils")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DropletUtils")
library(clusterpval)
library(fastcluster)
library(DropletUtils)
library(scater)
install.packages("scater")
install.packages("BiocManager")
BiocManager::install("scater")
library(scater)
library(clusterpval)
library(fastcluster)
library(DropletUtils)
library(scater)
library(ggfortify)
library(patchwork)
set.seed(1)
source("util.R")
##### Pre-processing and splitting data ####
cd4.t <- read10xCounts("./raw/filtered_matrices_mex_memory/hg19")
library(palmerpenguins)
uri_adelie <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.219.3&entityid=002f3893385f710df69eeebe893144ff"
uri_gentoo <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.220.3&entityid=e03b43c924f226486f2f0ab6709d2381"
uri_chinstrap <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.221.2&entityid=fe853aa8f7a59aa84cdd3197619ef462"
# Combining the URIs
uris <- c(uri_adelie, uri_gentoo, uri_chinstrap)
# Downloading and importing data
library(purrr)
library(readr)
install.packages("readr")
library(palmerpenguins)
uri_adelie <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.219.3&entityid=002f3893385f710df69eeebe893144ff"
uri_gentoo <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.220.3&entityid=e03b43c924f226486f2f0ab6709d2381"
uri_chinstrap <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.221.2&entityid=fe853aa8f7a59aa84cdd3197619ef462"
# Combining the URIs
uris <- c(uri_adelie, uri_gentoo, uri_chinstrap)
# Downloading and importing data
library(purrr)
library(readr)
penguins_lter <- map_dfr(uris, read_csv)
library(palmerpenguins)
library(ggplot2)
library(clusterpval)
library(fastcluster)
library(patchwork)
source("util.R")
options(ggplot2.discrete.colour=list(RColorBrewer::brewer.pal(6, "Accent")))
# Subset to female penguins in years 2008/2009 & bill/flipper length variables
penguins <- penguins[complete.cases(penguins), ]
dat <- penguins[penguins$sex == "female" & penguins$year != 2009, c(1, 3, 5)]
X <- dat[, -c(1)]
X <- as.matrix(X)
# Split off a part to estimate the variance
X.ss <- penguins[penguins$sex == "female" & penguins$year == 2009, c(3, 5)]
sig <- sqrt(sum(scale(X.ss, scale = FALSE)^2)/(nrow(X.ss) * ncol(X.ss) -ncol(X.ss)))
# Cluster and visualize data; this is Figure 6
K <- 5
hc <- hclust(dist(X)^2, method="average")
hc$labels <- dat$species
table( hc$labels, cutree(hc, K))
p1 <- ggdendro::ggdendrogram(hc, labels=F) + ggtitle("(a) Dendrogram") +
geom_hline(yintercept=hc$height[nrow(X)-4] - 20, col="red", linetype="dashed") +
ylab("Height") + theme(axis.text.x=element_blank(),
plot.title = element_text(size=22),
axis.text.y=element_text(size=22))
p2 <- ggplot(data = penguins[penguins$sex == "female" & penguins$year != 2009, ]) +
geom_point(aes(x=bill_length_mm, y = flipper_length_mm,
fill = as.factor(cutree(hc, 5)),
shape=as.factor(species)), size = 5, colour="black") +
scale_fill_discrete(name="Clusters",
guide=guide_legend(ncol=2,
override.aes=list(shape=21))) +
scale_shape_manual(name="Species", values=c(21, 24, 22),
guide=guide_legend(override.aes=list(fill="black"))) +
xlab("Bill length (mm)") + ylab("Flipper length (mm)") +
coord_flip() +
theme_bw(base_size=22) + ggtitle("(b) Data") + theme(legend.position="right")
p1+p2
# Run tests
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=2, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=3, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=4, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=2, k2=3, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=2, k2=4, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=3, k2=4, hcl=hc, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=2, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=3, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=4, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=2, k2=3, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=2, k2=4, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=3, k2=4, sig=sig)
library(clusterpval)
library(fastcluster)
library(DropletUtils)
library(scater)
library(ggfortify)
library(patchwork)
set.seed(1)
source("util.R")
##### Pre-processing and splitting data ####
cd4.t <- read10xCounts("./raw/filtered_matrices_mex_memory/hg19")
library(palmerpenguins)
library(ggplot2)
library(clusterpval)
library(fastcluster)
library(patchwork)
source("util.R")
options(ggplot2.discrete.colour=list(RColorBrewer::brewer.pal(6, "Accent")))
# Subset to female penguins in years 2008/2009 & bill/flipper length variables
penguins <- penguins[complete.cases(penguins), ]
dat <- penguins[penguins$sex == "female" & penguins$year != 2009, c(1, 3, 5)]
X <- dat[, -c(1)]
X <- as.matrix(X)
# Split off a part to estimate the variance
X.ss <- penguins[penguins$sex == "female" & penguins$year == 2009, c(3, 5)]
sig <- sqrt(sum(scale(X.ss, scale = FALSE)^2)/(nrow(X.ss) * ncol(X.ss) -ncol(X.ss)))
# Cluster and visualize data; this is Figure 6
K <- 5
hc <- hclust(dist(X)^2, method="average")
hc$labels <- dat$species
table( hc$labels, cutree(hc, K))
p1 <- ggdendro::ggdendrogram(hc, labels=F) + ggtitle("(a) Dendrogram") +
geom_hline(yintercept=hc$height[nrow(X)-4] - 20, col="red", linetype="dashed") +
ylab("Height") + theme(axis.text.x=element_blank(),
plot.title = element_text(size=22),
axis.text.y=element_text(size=22))
p2 <- ggplot(data = penguins[penguins$sex == "female" & penguins$year != 2009, ]) +
geom_point(aes(x=bill_length_mm, y = flipper_length_mm,
fill = as.factor(cutree(hc, 5)),
shape=as.factor(species)), size = 5, colour="black") +
scale_fill_discrete(name="Clusters",
guide=guide_legend(ncol=2,
override.aes=list(shape=21))) +
scale_shape_manual(name="Species", values=c(21, 24, 22),
guide=guide_legend(override.aes=list(fill="black"))) +
xlab("Bill length (mm)") + ylab("Flipper length (mm)") +
coord_flip() +
theme_bw(base_size=22) + ggtitle("(b) Data") + theme(legend.position="right")
p1+p2
# Run tests
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=2, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=3, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=1, k2=4, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=2, k2=3, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=2, k2=4, hcl=hc, sig=sig)
test_hier_clusters_exact(as.matrix(X), "average", K=5, k1=3, k2=4, hcl=hc, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=2, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=3, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=1, k2=4, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=2, k2=3, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=2, k2=4, sig=sig)
wald_test(as.matrix(X), "average", K=5, k1=3, k2=4, sig=sig)
library(clusterpval)
library(fastcluster)
library(DropletUtils)
library(scater)
library(ggfortify)
library(patchwork)
set.seed(1)
source("util.R")
##### Pre-processing and splitting data ####
cd4.t <- read10xCounts("./raw/filtered_matrices_mex_memory/hg19")
# Install BiocManager if not already installed
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Install required packages if not present
required_pkgs <- c("SingleCellExperiment", "SummarizedExperiment", "DropletUtils",
"scater", "clusterpval", "fastcluster", "ggfortify", "patchwork")
for (pkg in required_pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
BiocManager::install(pkg, ask = FALSE, update = TRUE)
}
}
# Load libraries in the correct order
library(SingleCellExperiment)
library(SummarizedExperiment)
library(DropletUtils)
library(scater)
library(clusterpval)
library(fastcluster)
library(ggfortify)
library(patchwork)
# Clean environment to avoid class definition issues
rm(list = ls())
gc()
set.seed(1)
source("util.R")
##### Pre-processing and splitting data ####
cd4.t <- read10xCounts("./raw/filtered_matrices_mex_memory/hg19")
source("~/Documents/clusterpval-experiments/real-data-code/zheng.R")
# Install BiocManager if not already installed
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Install required packages if not present
required_pkgs <- c("SingleCellExperiment", "SummarizedExperiment", "DropletUtils",
"scater", "clusterpval", "fastcluster", "ggfortify", "patchwork")
for (pkg in required_pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
BiocManager::install(pkg, ask = FALSE, update = TRUE)
}
}
# Load libraries in the correct order
library(SingleCellExperiment)
library(SummarizedExperiment)
library(DropletUtils)
library(scater)
library(clusterpval)
library(fastcluster)
library(ggfortify)
library(patchwork)
# Clean environment to avoid class definition issues
rm(list = ls())
gc()
set.seed(1)
source("util.R")
##### Pre-processing and splitting data ####
cd4.t <- read10xCounts("./raw/filtered_matrices_mex_memory/hg19")
